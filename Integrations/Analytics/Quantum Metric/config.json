{
  "plugin_type": "analytics_integration",
  "name": "Quantum Metric Integration",
  "form_schema": [
    {
      "default_value": "",
      "field_type": "text",
      "name": "qm_decision_id",
      "label": "QM Decision ID (Campaign, Experiment and Variation)",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "qm_campaign_id",
      "label": "QM Campaign Event ID",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "qm_experiment_id",
      "label": "QM Experiment Event ID",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "qm_variation_id",
      "label": "QM Variation Event ID",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "qm_holdback_id",
      "label": "QM Holdback Event ID",
      "options": null
    }
  ],
  "description": "This integration sends Optimizely campaign, experiments and variation data to Quantum Metric as events for segmentation and analysis.",
  "options": {
    "track_layer_decision": "function sendDecisionData(){\ntry{\nif (extension.qm_decision_id){\nwindow.QuantumMetricAPI.sendEvent(extension.qm_decision_id, 0, 'Campaign: ' + campaign.name + ' \nExperiment: ' + experimentId + ' \nVariation: ' + variationId);\n}\nif (extension.qm_campaign_id){\nwindow.QuantumMetricAPI.sendEvent(extension.qm_campaign_id, 0, campaignId);\n}\nif (extension.qm_experiment_id){\nwindow.QuantumMetricAPI.sendEvent(extension.qm_experiment_id, 0, experimentId);\n}\nif (extension.qm_variation_id){\nwindow.QuantumMetricAPI.sendEvent(extension.qm_variation_id, 0, variationId);\n}\n} catch (e) {}\n}\nif(!!window.QuantumMetricAPI){\nsendDecisionData();\n} else{\nwindow.addEventListener('quantumReady', sendDecisionData);\n}"
  }
}
