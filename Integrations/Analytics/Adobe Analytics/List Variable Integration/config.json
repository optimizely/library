{
  "plugin_type": "analytics_integration",
  "name": "List Var Custom Adobe Analytics",
  "form_schema": [],
  "description": "Track this campaign in Adobe Analytics using a list variable.",
  "options": {
    "track_layer_decision": "// This extension integrates Optimizely w/ Adobe via a pre-defined list variable. Set the list variable on line 3 below.\nvar decisionString = window.optimizely.get('state').getDecisionString({\n  campaignId: campaignId,\n  shouldCleanString: true\n});\nvar redirectInfo = window.optimizely.get('state').getRedirectInfo();\nvar list = \"list1\";\n\n// Public Methods\nvar adobeIntegrator = {\n  // Array of objects for active campaigns/experiments\n  campaignArray: [],\n  // Accepts \"s\" variable as a param and assigns campaigns/experiments to list.\n  assignCampaigns: function(sVariable) {\n    sVariable[list] = sVariable[list] || [];\n    if (!!redirectInfo) sVariable.referrer = redirectInfo.referrer;\n    for (var i = this.campaignArray.length - 1; i >= 0; i--) {\n      sVariable[list].push(this.campaignArray[i]);\n      this.campaignArray.splice(i, 1);\n    }\n  },\n  // Accepts \"s\" variable as a param and assigns eVars to object, then dispatches custom link tracking.\n  trackDelayedCampaigns: function(sVariable) {\n    sVariable[list] = sVariable[list] || [];\n    sVariable.linkTrackVars += (\",\" + list);\n    for (var i = this.campaignArray.length - 1; i >= 0; i--) {\n      sVariable[list].push(this.campaignArray[i]);\n      this.campaignArray.splice(i, 1);\n    }\n    sVariable.tl(true, \"o\", \"OptimizelyLayerDecision\");\n  }\n};\n\n// Scopes `campaignArray` to Optimizely object.\nif (!window.optimizely.get(\"custom/adobeIntegrator\")) {\n  window.optimizely.push({\n    type: \"registerModule\",\n    moduleName: \"adobeIntegrator\",\n    module: adobeIntegrator\n  });\n}\n\n// Failing Audiences returns `null`, failing Traffic Allocation returns `undefined` for decisionString.\nif (!!decisionString) window.optimizely.get(\"custom/adobeIntegrator\").campaignArray.push(decisionString);"
  }
}